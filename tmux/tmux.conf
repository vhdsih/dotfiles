set -g prefix C-x
unbind C-b # 解绑ctrl_b_
bind C-x send-prefix # 绑定ctrl_x

# 增加历史记录
set -g history-limit 50000
# 从tmux v1.6版开始，支持设置第二个指令前缀
set-option -g prefix2 C-b # 设置`键为第二个指令前缀

# 重载配置快捷键
bind r source-file ~/.tmux.conf \; display-message "重载配置成功!"

# 分屏
unbind '"'
bind - splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，同时默认进入当前目录
bind | splitw -h -c '#{pane_current_path}' # 水平方向新增面板，同时默认进入当前目录

# 鼠标支持
# tmux v2.1 之前版本
# setw -g mode-mouse on # 支持鼠标选取文本等
# setw -g mouse-resize-pane on # 支持鼠标拖动调整面板的大小(通过拖动面板间的分割线)
# setw -g mouse-select-pane on # 支持鼠标选中并切换面板
# setw -g mouse-select-window on # 支持鼠标选中并切换窗口(通过点击状态栏窗口名称)

# tmux v2.1及以上版本
set-option -g mouse on # 等同于以上4个指令的效果

# 快速面板切换
# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

bind -r e lastp # 选择最后一个面板
bind -r ^e last # 选择最后一个窗口

bind -r ^u swapp -U # 与前一个面板交换位置
bind -r ^d swapp -D # 与后一个面板交换位置

# 面板大小调整
# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -r ^k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -r ^j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -r ^h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -r ^l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# 其他配置
# bind m command-prompt "splitw -h 'exec man %%'"   # 绑定m键为在新的panel打开man
# 绑定P键为开启日志功能，如下，面板的输出日志将存储到桌面
# bind P pipe-pane -o "cat >>~/Desktop/#W.log" \; display "Toggled logging to ~/Desktop/#W.log"


# 恢复用户空间
# if-shell 'test "$(uname -s)" = Darwin' 'set-option -g default-command "exec reattach-to-user-namespace -l $SHELL"'

# 复制模式
setw -g mode-keys vi

bind Escape copy-mode # 绑定esc键为进入复制模式
# tmux v2.4版本以下
# bind -t vi-copy v begin-selection # 绑定v键为开始选择文本
# bind -t vi-copy y copy-selection # 绑定y键为复制选中文本
# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
# 绑定y键为复制选中文本到Mac系统粘贴板
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# 鼠标拖动选中文本，并复制到Mac系统粘贴板
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
unbind p
bind C-p previous-window 
bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）


set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1

# 自定义状态栏
# set -g status-utf8 on # 状态栏支持utf8
# set -g status-interval 1 # 状态栏刷新时间
# set -g status-justify left # 状态栏列表左对齐
# setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

# set -g status-bg black # 设置状态栏背景黑色
# set -g status-fg yellow # 设置状态栏前景黄色
# set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

# set -g status-left "#[bg=#FF661D] 🌞 #S " # 状态栏左侧内容
# set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
# set -g status-left-length 300 # 状态栏左边长度300
# set -g status-right-length 500 # 状态栏左边长度500

# set -wg window-status-format " #I #W " # 状态栏窗口名称格式
# set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
# set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
# set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
# set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

# set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色

# 开启256 colors支持
set -g default-terminal "screen-256color"

############################# 插件 ##################################
# Tmux Resurrect配置
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux

## 恢复vim/neovim
set -g @resurrect-strategy-vim 'session' # for vim
# set -g @resurrect-strategy-nvim 'session' # for neovim

set -g @resurrect-capture-pane-contents 'on' # 开启恢复面板内容功能
set -g @resurrect-save-shell-history 'on' # 恢复shell的历史记录

# Tmux Continuum
set -g @continuum-save-interval '15'
set -g status-right 'Continuum status: #{continuum_status}'
# 需要放在后面
run-shell ~/.tmux/plugins/tmux-continuum/continuum.tmux

# TPM 配置
# 默认需要引入的插件
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'jimeh/tmux-themepack'
#set -g @plugin 'egel/tmux-gruvbox'
# set -g @plugin "arcticicestudio/nord-tmux"

# set -g @tmux-gruvbox 'dark' # or 'light'


source-file "${HOME}/.tmux/plugins/tmux-themepack/powerline/double/green.tmuxtheme"
set -g @themepack 'powerline/double/green'
# set -g @themepack 'basic'

# 引入其他插件的示例
# set -g @plugin 'github_username/plugin_name' # 格式：github用户名/插件名
# set -g @plugin 'git@github.com/user/plugin' # 格式：git@github插件地址

# 初始化tmux插件管理器(保证这行在~/.tmux.conf的非常靠后的位置)
run '~/.tmux/plugins/tpm/tpm'

