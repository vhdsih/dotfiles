# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export EDITOR=/usr/bin/vim
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes

ZSH_THEME="ys"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(sudo autojump git)

#!!!!!!
source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

function load_anaconda3() {
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
	__conda_setup="$('/opt/soft/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
	if [ $? -eq 0 ]; then
	    eval "$__conda_setup"
	else
	    if [ -f "/opt/soft/anaconda3/etc/profile.d/conda.sh" ]; then
		. "/opt/soft/anaconda3/etc/profile.d/conda.sh"
	    else
		export PATH="/opt/soft/anaconda3/bin:$PATH"
	    fi
	fi
	unset __conda_setup
# <<< conda initialize <<<
}


# plugin autojump
[[ -s /root/.autojump/etc/profile.d/autojump.sh ]] && source /root/.autojump/etc/profile.d/autojump.sh

autoload -U compinit && compinit -u

# acl complie cmd
function acl_compile() {
    g++ -std=c++11 $* -lfiber_cpp -lacl_all -lfiber -ldl -lpthread -lz
}

# delete function
is_deleted=0
del_log_file="$HOME/.deleted/deleted.log"

function rm() {
    is_deleted=1
    move_path=$HOME/.deleted/`date +'%Y-%m-%d~%H:%M:%S'`/
    echo :: files will be moved into $move_path
    mkdir -p $move_path

    for file in $*;
    do
        if [[ $file == -* ]]; then
            echo "-> ignore params " $file
        elif [[ $file == / ]]; then
            echo "-> dangerous option for rm -rf /, cmd ignored"
        elif [[ `realpath $file` == / ]]; then
            echo "-> realpath is /, dangerous option for rm -rf /, cmd ignored"
        else
            echo "-> mv $file $move_path"
            touch $del_log_file
            echo "mv $file to $move_path" >> $del_log_file

            mv $file $move_path
        fi
    done
}

function show_last_rm() {
    if [[ $is_deleted == 0 ]]
    then
        echo "you do not delete any file recently!"
    else
        echo "::path == $move_path"
        ls $move_path
    fi
}

function undo_last_rm() {
    if [[ $is_deleted == 0 ]]
    then
        echo "you do not delete any file recently!"
    else
        echo ":: move files from $move_path into `pwd`"
        mv $move_path/* .
        # sed -i '$d' $del_log_file
        echo "undo remove: move files from $move_path into `pwd`" >> $del_log_file
    fi
}

function clean_all_del() {
    echo ":: warning! delete all files in backup location[n/y]"
    read cmd
    if [[ $cmd == 'y' ]] then
        /usr/bin/rm -rf $HOME/.deleted/*
    else
        echo "exit!"
    fi
    echo > $del_log_file
}

alias remote-personal='zssh zhangdongchang@jumpbox.qiyi.domain'
alias remote-cdn='zssh -p 32780 zhangdongchang@bastion.qiyi.domain'

if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
        source /etc/profile.d/vte.sh
fi
alias vi=vim
alias final-rm='/bin/rm -rf'
